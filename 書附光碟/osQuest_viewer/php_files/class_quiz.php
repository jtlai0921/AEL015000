<?php class quiz { var $script_url = 'http://www.my-domain.com/quiz'; var $xml_url; var $quizID; var $mode; var $current_question = 1; var $error = ''; var $in_question = 0; var $in_section = ''; var $parseXML_cache = null; var $parsed_XML = array(); function quiz($path, $quizID, $mode = 'test') { $this->xml_url = $path; $this->quizID = $quizID; $this->mode = strtolower($mode); if (!($this->mode == 'test' || $this->mode == 'learning')) { $this->error = '錯誤: "' . $this->mode . '" 不合法的測驗模式. 目前只支援測驗與學習模式"'; } $this->xml_url = dirname(__file__) . '/' . $this->xml_url; } function do_quiz_here() { if (isset($_POST['pre_question'])) { $_POST['next_question'] = $_POST['next_question'] - 2; $this->print_question($_POST['next_question']); } else { if (isset($_POST['next_question'])) { if (!isset($_POST['answers'][$_POST['next_question'] - 1])) { $_POST['next_question'] = $_POST['next_question'] - 1; } $this->print_question($_POST['next_question']); } else { unset($_POST); $this->print_question(1); } } } function print_question($question_num) { $question_num = (int)$question_num; $data = $this->parseXML($this->quizID); if ( $data !== false ) { $a = $this->parsed_XML[$question_num]; $count_a = count($this->parsed_XML); if ( $question_num <= $count_a ) { if (isset($_POST['my_answers'])) { $m_answer = $_POST['my_answers']; if ( strlen($m_answer) >= $question_num ) { $m_answer = substr($m_answer, 0, $question_num-1) . $_POST['answers'][$question_num-1]; } else $m_answer .= $_POST['answers'][$question_num-1]; } else $m_answer = $_POST['answers'][$question_num-1]; $original_answer = strtolower(substr($this->decode($a['answer'], "osQuest"), 2, 1)); mt_srand($this->make_seed()); $new_answer_index = mt_rand(0, 3); $original_answer_index = ord($original_answer) - 97; if ($new_answer_index == $original_answer_index ) $c_answer = $original_answer; else { $new_answer = chr($new_answer_index + 97); $c_answer = $new_answer; } if ( isset($_POST['correct_answers'])) { $temp_answer = base64_decode($_POST['correct_answers']); if ( strlen($temp_answer) >= $question_num ) { $c_answer = substr($temp_answer, 0, $question_num-1) . $c_answer; } else $c_answer = $temp_answer . $c_answer; } if ($this->mode == 'learning' && $question_num > 1) { $this->learning_mode_print_answer($question_num - 1, $m_answer, $c_answer); } $a_text = $a['text']; $a_text = str_replace("「", "<pre>", $a_text); $a_text = str_replace("」", "</pre>", $a_text); echo ('<form action="" method="post">'); if ( $this->mode == 'learning' && $question_num > 1) { echo (' <input type="submit" name="pre_question" value="<< 前一個問題"><br/><br/>'); } echo ('<h4><u>問題 ' .$question_num . ' ：</u>' . $a_text . '</h4>'); echo ('<input type="hidden" name="next_question" value="' . ($question_num + 1) . '">' . "\n"); echo ('<input type="hidden" name="correct_answers" value="' . base64_encode($c_answer) .'">' . "\n"); echo ('<input type="hidden" name="my_answers" value="' . $m_answer .'">' . "\n"); if ($a['type'] == 'radio') { $items[0] = $a['choicea']; $items[1] = $a['choiceb']; $items[2] = $a['choicec']; $items[3] = $a['choiced']; if ($new_answer_index != $original_answer_index ) { $temp = $items[$new_answer_index]; $items[$new_answer_index] = $items[$original_answer_index]; $items[$original_answer_index] = $temp; } $str = "abcd"; for ( $i = 0; $i < 4; $i++ ) { echo ('<input type="radio" name="answers[' . $question_num . ']" id="' . substr($str, $i, 1) . '" value="' . substr($str, $i, 1) . '"> <label for="' . substr($str, $i, 1) . '">' . $items[$i] . '</label><br>' . "\n"); } } echo ('<br/><input type="submit" value="' . ($count_a == $question_num ? '計算測驗成績' : '下一個問題 >>') . '">'); echo ('</form>'); } else { $c_answer = base64_decode($_POST['correct_answers']); $m_answer = $_POST['my_answers'] . $_POST['answers'][$question_num-1]; if ($this->mode == 'learning' && $question_num > 1) { $this->learning_mode_print_answer($question_num - 1, $m_answer, $c_answer); echo ('<form action="" method="post">'); echo (' <input type="submit" name="pre_question" value="<< 前一個問題"><br/><br/>'); echo ('<input type="hidden" name="next_question" value="' . ($question_num + 1) . '">' . "\n"); echo ('<input type="hidden" name="correct_answers" value="' . base64_encode($c_answer) .'">' . "\n"); echo ('<input type="hidden" name="my_answers" value="' . $m_answer .'">' . "\n"); echo ('</form>'); } $total_answers = strlen($c_answer); $total_correct_answers = 0; $output = ""; if ( !strcmp($c_answer, $m_answer) ) $total_correct_answers = $total_answers; else { $output = "<h3>答錯題號 : "; for ( $i = 1; $i <= $total_answers; $i++ ) { $c_a = substr($c_answer, $i-1, 1); $m_a = substr($m_answer, $i-1, 1); if ( !strcmp($c_a, $m_a) ) $total_correct_answers++; else $output .= "[" . $i . "]"; } $output .= "</h3><br/>"; } echo ('<h1>' . (number_format(($total_correct_answers / $total_answers) * 100, 0, '.', '')) . '%</h1>'); echo ('<h3>測驗結果的答題正確率：答對 ' . $total_correct_answers . ' 題/共 ' . $total_answers .' 題<br/></h3>'); echo $output; if ($this->quizID == "test.xml" ) { echo "<p><font size=4><a href='generatequiz.php?chapter=test.xml'>再試一次模擬測驗</a></font></p>"; } } } else { $this->error = '錯誤: 沒有測驗內容'; echo $this->quiz_error(); } } function learning_mode_print_answer($question_num, $m_answer, $c_answer) { $isCorrect = 0; $m_a = substr($m_answer, $question_num-1, 1); $c_a = substr($c_answer, $question_num-1, 1); $chkanswer = $this->checkanswer($question_num, $m_a, $c_a); if ($chkanswer['your_answer'] == $chkanswer['correct_answer']) { echo "<h3>答案正確!</h3>"; $colortext = 'AA2808'; $isCorrect = 1; } else { echo "<h3>答案錯誤!!</h3>"; $colortext = 'FF0000'; $isCorrect = 0; } $a_text = $this->parsed_XML[$question_num]['text']; $a_text = str_replace("「", "<pre>", $a_text); $a_text = str_replace("」", "</pre>", $a_text); echo '<h4><b><u>前一個問題：</u></b> ' . $a_text; echo '</h4><h4><p style="color:#' . $colortext . ';">'; echo '<b>你的答案：</b> ' . $chkanswer['your_answer'] . '<br/>'; if ($isCorrect == 1) { echo '<b>正確答案：</b> ' . $chkanswer['correct_answer'] . '<br/>'; } else { echo "<form id='ansForm'>"; echo '<b>正確答案：</b> <span id="answer">按[前一個問題]鈕再試一次, 或按 </span>'; echo "<input type='button' id='ansButton' value='顯示正確答案' onclick='displayAnswer();'>"; echo "</form>"; echo "<script language='JavaScript'>"; echo "function displayAnswer() {"; echo " answer.innerText = '" . $chkanswer['correct_answer'] . "';"; echo " ansForm.ansButton.style.display = 'none';"; echo "}"; echo "</script>"; } echo '<b>答案說明：</b> ' . $this->parsed_XML[$question_num]['explanation'] . '</p></h4><hr/>'; } function checkanswer($question, $your_answer, $right_answer) { if ($this->parseXML($this->quizID) !== false && $question > 0) { $a = $this->parsed_XML[$question]; $a_answer = strtolower(substr($this->decode($a['answer'], "osQuest"), 2, 1)); $correct_answer = ''; if ($a['type'] == 'radio') { if ( $your_answer == $a_answer ) { $your_answer = $a['choice' . $right_answer]; } else { if ( $your_answer == $right_answer ) $your_answer = $a['choice' . $a_answer]; else $your_answer = $a['choice' . $your_answer]; } $correct_answer = $a['choice' . $a_answer]; } return array('your_answer' => $your_answer, 'correct_answer' => $correct_answer); } return false; } function decode($string,$key) { $key = sha1($key); $strLen = strlen($string); $keyLen = strlen($key); $j = 0; for ($i = 0; $i < $strLen; $i+=2) { $ordStr = hexdec(base_convert(strrev(substr($string,$i,2)),36,16)); if ($j == $keyLen) { $j = 0; } $ordKey = ord(substr($key,$j,1)); $j++; $hash .= chr($ordStr - $ordKey); } return $hash; } function make_seed() { list($usec, $sec) = explode(' ', microtime()); return (float) $sec + ((float) $usec * 100000); } function XML_startTag($parser, $data, $attr) { if (strtolower($data) == 'question') { $this->in_question++; } else { $this->in_section = strtolower($data); } } function XML_contents($parser, $data) { if ($this->in_question > 0 && ($this->in_section == 'text' || strpos($this-> in_section, 'choice') !== false || $this->in_section == 'answer' || $this-> in_section == 'explanation' || $this->in_section == 'type')) { if ($this->in_section == 'answer') { $data = strtolower($data); } $this->parsed_XML[$this->in_question][$this->in_section] = $data; } } function XML_endTag($parser, $data) { if (strtolower($data) == 'question') { } else { $this->in_section = ''; } } function parseXML($file) { if ($this->parseXML_cache === null) { $file = str_replace('\\', '/', $this->xml_url . '/' . $file); $this->in_question = 0; $this->in_section = ''; $xml_parser = xml_parser_create(); xml_set_object($xml_parser, $this); xml_set_element_handler($xml_parser, 'XML_startTag', 'XML_endTag'); xml_set_character_data_handler($xml_parser, 'XML_contents'); $fp = fopen($file, 'r'); $data = fread($fp, 80000); if (!(xml_parse($xml_parser, $data, feof($fp)))) { $this->parseXML_cache = false; return false; } xml_parser_free($xml_parser); fclose($fp); foreach ($this->parsed_XML as $a => $value) { if (!isset($this->parsed_XML[$a]['type'])) { $this->parsed_XML[$a]['type'] = 'radio'; } } $this->parseXML_cache = $data; return $data; } else { return $this->parseXML_cache; } } function quiz_error() { return $this->error; } } ?>
